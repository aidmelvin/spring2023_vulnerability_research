import sqlite3


class DataBaseEngine:
    def __init__(self):
        # Connect to a database
        self.conn = sqlite3.connect('example.db')

        # Create a cursor object
        # self.c = self.conn.cursor()
        self._attack_surface_table_name = 'county_domain_attack_surface'
        self._demographic_data_table_name = 'county_demographic_data.csv'
        self._attack_surface_output_file_name = '../data/condensed_attack_surface.csv'

    def initialize_dataframe(self):
        # Create a new table
        c = self.conn.cursor()
        try:
            c.execute(f'CREATE TABLE {self._attack_surface_table_name} \
                         (state TEXT, \
                         county TEXT, \
                         domain TEXT, \
                         ip_address TEXT, \
                         tier_level REAL)')
            c.execute(f'CREATE TABLE {self._demographic_data_table_name} \
                             (state TEXT, \
                             county TEXT, \
                             median_income REAL, \
                             percent_high_school REAL, \
                             percent_undergrad REAL, \
                             percent_white REAL)')
        except sqlite3.OperationalError:
            print('tables already exist, skipping initialization')
        c.close()

    def write_row_attack_surface(self, state: str, county: str, domain: str, ip_addr: str, tier: int):
        fh = open(self._attack_surface_output_file_name, 'a')
        fh.write(f'{state},{county},{domain},{ip_addr},{tier}\n')
        fh.close()
        # c = self.conn.cursor()
        # c.execute(f"INSERT INTO {self._attack_surface_table_name} ( \
        #                state, county, domain, ip_address, tier_level) VALUES \
        #                ('{state}', '{county}', '{domain}', '{ip_addr}', '{tier}')")
        # self.conn.commit()
        # c.close()

    def write_row_demographic(self, state: str, county: str, med_income: float, pct_hs: float, pct_ug: float, pct_white: float):
        c = self.conn.cursor()
        c.execute(f"INSERT INTO {self._demographic_data_table_name} ( \
                       state, county, median_income, percent_high_school, percent_undergrad, percent_white) VALUES \
                       ({state}, {county}, {med_income}, {pct_hs}, {pct_ug}, {pct_white})")
        c.close()
