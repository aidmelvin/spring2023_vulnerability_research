
from parser.Document import Document
import pandas as pd
from models.Tiers import port_to_tier, service_to_tier
from database_scripts.write_to_db import DataBaseEngine

# read in and parse attack_surface_data.txt
doc = Document('../data/attack_surface_data.txt')
doc.parse_document()

# dict of ip addresses to make sure there are no duplicates
ip_addresses = set()
zip_codes = pd.read_csv('../data/zip_code_database.csv')
db_writer = DataBaseEngine()
db_writer.initialize_dataframe()
unknown_services_and_ports = set()  # for initially determining all the unknown services and ports

for domain in doc.domains:
    for outer_array in domain.parsed_row:
        for inner_document in outer_array:  # each inner_document is one IP address
            if inner_document['location']['country'] == 'United States' and inner_document['ip'] not in ip_addresses:
                ip_addresses.add(inner_document['ip'])
                # look up state and county
                zip_code = int(inner_document['location']['postal_code'])
                search_results = str(zip_codes[zip_codes['zip'] == zip_code]['county'].value_counts())
                if len(search_results.split('\n')) == 2:  # making sure only one county with that zip code

                    state = str(zip_codes[zip_codes['zip'] == zip_code]['state'].value_counts()).split('1')[0].strip()
                    county = search_results.split('1')[0].strip()

                    max_tier = -1
                    # determine IP tier
                    for port_service in inner_document['services']:
                        if port_service['port'] in port_to_tier:
                            if max_tier < port_to_tier[int(port_service['port'])]:
                                max_tier = port_to_tier[int(port_service['port'])]
                        elif port_service['extended_service_name'] == 'UNKNOWN':
                            pass
                        elif port_service['extended_service_name'] in service_to_tier:
                            if max_tier < service_to_tier[port_service['extended_service_name']]:
                                max_tier = service_to_tier[port_service['extended_service_name']]
                        else:
                            if f"{port_service['port']}, {port_service['extended_service_name']}" not in unknown_services_and_ports:
                                # print(f"{port_service['port']}, {port_service['extended_service_name']}")
                                unknown_services_and_ports.add(f"{port_service['port']}, {port_service['extended_service_name']}")

                    if max_tier != -1:
                        db_writer.write_row_attack_surface(state, county, domain.domain_name, inner_document['ip'], max_tier)
