
from typing import List, Dict
import hjson
import orjson


class Domain:
    def __init__(self):
        self.raw_row_text: str = ''
        self.domain_name: str = ''
        self.parsed_row = {}  # this will have the result of orjson parsing

        # these will probably need to be deleted
        self.ips: List[str] = []
        self.ports: List[int] = []
        self.services: List[str] = []
        self.port_tier_data: Dict[int, List[int]] = {}
        self.overall_port_tier: int = -1
        # self.parse_row()

    def set_raw_row_text(self, t):
        self.raw_row_text = t.replace('\xf6', 'o').replace("'", '"')

    def display_data(self):
        print(f'Domain: {self.domain_name}')
        print(f'\tIP Count: {len(self.ips)}, IP preview: {self.ips[:2]}')
        print(f'\tOverall port tier, scale of 0-4: {self.overall_port_tier}')
        print(f'\tAvailable services: {self.services}')

    def parse_row_new(self):
        self.parsed_row = orjson.loads(self.raw_row_text)

    def parse_row(self):
        all_aspects = self.raw_row_text.split('""')
        for i in range(0, len(all_aspects)):
            all_aspects[i] = all_aspects[i].strip().replace('"', '')

        i = 0
        while i < len(all_aspects):
            if all_aspects[i] == '' or all_aspects[i].find(',,') != -1:
                all_aspects.pop(i)
            else:
                i = i + 1
        self.domain_name = all_aspects[0]
        self.ips = all_aspects[1].split(',')
        self.ports = [int(i) for i in all_aspects[3].split(',')]
        self.services = all_aspects[5].split(',')
        self.port_tier_data = hjson.loads(all_aspects[7])
        self.overall_port_tier = int(all_aspects[len(all_aspects) - 1])
